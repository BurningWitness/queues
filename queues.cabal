cabal-version: 2.2

author: Mitchell Rosen, Travis Staton
bug-reports: https://github.com/awkward-squad/queues/issues
category: Data
copyright: Copyright (C) 2023 Mitchell Rosen, Travis Staton
homepage: https://github.com/awkward-squad/queues
license: BSD-3-Clause
license-file: LICENSE
maintainer: Mitchell Rosen <mitchellwrosen@gmail.com>, Travis Staton <hello@travisstaton.com>
name: queues
stability: experimental
synopsis: Queue and deque data structures.
tested-with: GHC == 9.4.7, GHC == 9.6.3, GHC == 9.8.1
version: 0.1.0

description:
  Queue and deque data structures, as described in
  .
    * Okasaki, Chris. "Simple and efficient purely functional queues and deques." /Journal of functional programming/ 5.4 (1995): 583-592.
    * Okasaki, Chris. /Purely Functional Data Structures/. Diss. Princeton University, 1996.
  .
  This package provides two queue variants and one deque, whose salient API differences are summarized in the following table:
  .
  +-----------------+----------------------+--------------------+
  |                 | @"EphemeralQueue"@   | @"Queue"@          |
  +=================+======================+====================+
  | @enqueue@       | \(\mathcal{O}(1)\)   | \(\mathcal{O}(1)\) |
  +-----------------+----------------------+--------------------+
  | @dequeue@       | \(\mathcal{O}(1)^⧧\) | \(\mathcal{O}(1)\) |
  +-----------------+----------------------+--------------------+
  | @length@        | \(\mathcal{O}(n)\)   | \(\mathcal{O}(n)\) |
  +-----------------+----------------------+--------------------+
  | @fromList@      | \(\mathcal{O}(1)\)   | \(\mathcal{O}(1)\) |
  +-----------------+----------------------+--------------------+
  .
    * \(^*\) Amortized.
    * \(^⧧\) Amortized under ephemeral usage only.
  .
  To see a rough performance comparison between the data structures, click into an individual module. Always benchmark
  your own code for accurate numbers.

extra-doc-files:
  CHANGELOG.md
  README.md

source-repository head
  type: git
  location: https://github.com/awkward-squad/queues.git

common component
  default-extensions:
    BangPatterns
    BlockArguments
    ConstraintKinds
    DataKinds
    DeriveFunctor
    DerivingStrategies
    DuplicateRecordFields
    ExistentialQuantification
    GeneralizedNewtypeDeriving
    ImportQualifiedPost
    InstanceSigs
    LambdaCase
    NamedFieldPuns
    OverloadedStrings
    PatternSynonyms
    RankNTypes
    ScopedTypeVariables
    StandaloneKindSignatures
    TypeOperators
    ViewPatterns
  default-language: Haskell2010
  ghc-options:
    -Weverything
    -Wno-all-missed-specialisations
    -Wno-implicit-prelude
    -Wno-missed-specialisations
    -Wno-missing-import-lists
    -Wno-missing-safe-haskell-mode
    -Wno-prepositive-qualified-module
    -Wno-safe
    -Wno-unsafe
  if impl(ghc >= 9.2)
    ghc-options:
      -Wno-missing-kind-signatures
  if impl(ghc >= 9.8)
    ghc-options:
      -Wno-missing-role-annotations

library
  import: component
  build-depends:
    base ^>= 4.17 || ^>= 4.18 || ^>= 4.19,
  exposed-modules:
    Deque
    Deque.RealTime
    Queue
    Queue.Ephemeral
  hs-source-dirs: src

test-suite test
  import: component
  build-depends:
    base,
    containers ^>= 0.6.7 || ^>= 0.7,
    hedgehog ^>= 1.4,
    queues,
  ghc-options: -rtsopts -threaded "-with-rtsopts=-N4"
  hs-source-dirs: test
  main-is: Main.hs
  type: exitcode-stdio-1.0

benchmark bench-amortized-deque
  import: component
  build-depends:
    base,
    queues,
    tasty-bench ^>= 0.3.5,
  ghc-options: -fproc-alignment=64 -rtsopts -threaded
  hs-source-dirs: bench/amortized-deque
  main-is: Main.hs
  type: exitcode-stdio-1.0

benchmark bench-ephemeral-queue
  import: component
  build-depends:
    base,
    queues,
    tasty-bench ^>= 0.3.5,
  ghc-options: -fproc-alignment=64 -rtsopts -threaded
  hs-source-dirs: bench/ephemeral-queue
  main-is: Main.hs
  type: exitcode-stdio-1.0

benchmark bench-real-time-deque
  import: component
  build-depends:
    base,
    queues,
    tasty-bench ^>= 0.3.5,
  ghc-options: -fproc-alignment=64 -rtsopts -threaded
  hs-source-dirs: bench/real-time-deque
  main-is: Main.hs
  type: exitcode-stdio-1.0

benchmark bench-real-time-queue
  import: component
  build-depends:
    base,
    queues,
    tasty-bench ^>= 0.3.5,
  ghc-options: -fproc-alignment=64 -rtsopts -threaded
  hs-source-dirs: bench/real-time-queue
  main-is: Main.hs
  type: exitcode-stdio-1.0

benchmark bench-sequence-queue
  import: component
  build-depends:
    base,
    containers ^>= 0.6.7 || ^>= 0.7,
    tasty-bench ^>= 0.3.5,
  ghc-options: -fproc-alignment=64 -rtsopts -threaded
  hs-source-dirs: bench/sequence-queue
  main-is: Main.hs
  type: exitcode-stdio-1.0
